# =============================================================================
# PROCUREMENT PLATFORM - ENVIRONMENT VARIABLES
# =============================================================================
# Скопируйте этот файл в .env.production и заполните реальными значениями

# =============================================================================
# DJANGO CORE SETTINGS
# =============================================================================

# SECURITY WARNING: keep the secret key used in production secret!
# Сгенерируйте новый: python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
SECRET_KEY=your-very-secret-key-here-change-me-in-production

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG=False

# Разрешённые хосты (разделяйте запятыми)
ALLOWED_HOSTS=localhost,127.0.0.1,yourdomain.com

# CSRF настройки
CSRF_TRUSTED_ORIGINS=http://localhost,https://yourdomain.com

# CORS настройки
CORS_ALLOWED_ORIGINS=http://localhost:3000,https://yourdomain.com

# =============================================================================
# DATABASE SETTINGS
# =============================================================================

# PostgreSQL настройки
POSTGRES_DB=procurement_db
POSTGRES_USER=procurement_user
POSTGRES_PASSWORD=your-strong-database-password
POSTGRES_HOST=db
POSTGRES_PORT=5432

# Полная строка подключения (альтернатива)
# DATABASE_URL=postgresql://user:password@host:port/database

# =============================================================================
# REDIS SETTINGS
# =============================================================================

REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_URL=redis://redis:6379/0

# =============================================================================
# CELERY SETTINGS
# =============================================================================

CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0

# =============================================================================
# EMAIL SETTINGS
# =============================================================================

# SMTP настройки
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=your-email@gmail.com
EMAIL_HOST_PASSWORD=your-app-specific-password

# От кого приходят письма
DEFAULT_FROM_EMAIL=noreply@procurement.com
SERVER_EMAIL=server@procurement.com

# Для тестирования - выводит письма в консоль
# EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend

# =============================================================================
# SENTRY (ERROR TRACKING)
# =============================================================================

# Получите DSN на https://sentry.io
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
SENTRY_ENVIRONMENT=production
SENTRY_TRACES_SAMPLE_RATE=0.1

# Git commit для отслеживания версий
GIT_COMMIT=main

# =============================================================================
# SOCIAL AUTHENTICATION
# =============================================================================

# Google OAuth2 - https://console.cloud.google.com/
GOOGLE_OAUTH2_KEY=your-google-client-id.apps.googleusercontent.com
GOOGLE_OAUTH2_SECRET=your-google-client-secret

# GitHub OAuth - https://github.com/settings/developers
GITHUB_KEY=your-github-client-id
GITHUB_SECRET=your-github-client-secret

# =============================================================================
# FILE STORAGE
# =============================================================================

# Локальное хранилище (по умолчанию)
MEDIA_ROOT=/app/media
MEDIA_URL=/media/

# AWS S3 (опционально)
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_STORAGE_BUCKET_NAME=your-bucket-name
# AWS_S3_REGION_NAME=us-east-1

# =============================================================================
# CACHING
# =============================================================================

CACHE_TTL=300
CACHALOT_ENABLED=True

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# Session
SESSION_COOKIE_SECURE=True
SESSION_COOKIE_HTTPONLY=True
SESSION_COOKIE_SAMESITE=Strict
SESSION_COOKIE_AGE=1209600

# CSRF
CSRF_COOKIE_SECURE=True
CSRF_COOKIE_HTTPONLY=True
CSRF_COOKIE_SAMESITE=Strict

# HTTPS
SECURE_SSL_REDIRECT=True
SECURE_PROXY_SSL_HEADER=HTTP_X_FORWARDED_PROTO,https

# Security Headers
SECURE_HSTS_SECONDS=31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS=True
SECURE_HSTS_PRELOAD=True
SECURE_CONTENT_TYPE_NOSNIFF=True
SECURE_BROWSER_XSS_FILTER=True
X_FRAME_OPTIONS=DENY

# =============================================================================
# LOGGING
# =============================================================================

LOG_LEVEL=INFO
LOG_FILE=/app/logs/django.log

# =============================================================================
# PERFORMANCE
# =============================================================================

# Silk profiling
SILKY_INTERCEPT_PERCENT=10
SILKY_MAX_RECORDED_REQUESTS=1000

# Gunicorn workers
GUNICORN_WORKERS=4
GUNICORN_THREADS=2
GUNICORN_TIMEOUT=120

# =============================================================================
# API SETTINGS
# =============================================================================

# Pagination
REST_FRAMEWORK_PAGE_SIZE=50

# Rate limiting (requests per hour)
API_RATE_LIMIT=1000

# =============================================================================
# DOCKER SPECIFIC
# =============================================================================

# Используется docker-compose
COMPOSE_PROJECT_NAME=procurement

# =============================================================================
# BACKUP SETTINGS
# =============================================================================

# Директория для бэкапов
BACKUP_DIR=/app/backups

# Количество дней хранения бэкапов
BACKUP_RETENTION_DAYS=30

# =============================================================================
# MONITORING & ANALYTICS
# =============================================================================

# Google Analytics (опционально)
# GA_TRACKING_ID=UA-XXXXXXXXX-X

# Sentry Performance Monitoring
SENTRY_ENABLE_PROFILING=False

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Включить/выключить функции
ENABLE_SOCIAL_AUTH=True
ENABLE_EMAIL_NOTIFICATIONS=True
ENABLE_CELERY_BEAT=True
ENABLE_CACHE=True
ENABLE_SILK=False

# =============================================================================
# DEVELOPMENT ONLY
# =============================================================================

# Не используйте в production!
# DEBUG=True
# ALLOWED_HOSTS=*
# SECURE_SSL_REDIRECT=False
# SESSION_COOKIE_SECURE=False
# CSRF_COOKIE_SECURE=False

# =============================================================================
# NOTES
# =============================================================================

# 1. Все пароли и секретные ключи должны быть уникальными и сложными
# 2. В production всегда используйте DEBUG=False
# 3. Настройте HTTPS и SSL сертификаты
# 4. Регулярно обновляйте зависимости: pip list --outdated
# 5. Делайте бэкапы базы данных ежедневно
# 6. Мониторьте логи и Sentry dashboard
# 7. Используйте переменные окружения, не хардкодьте значения
